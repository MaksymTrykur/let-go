;
; Copyright (c) 2021 Marcin Gasperowicz <xnooga@gmail.com>
; SPDX-License-Identifier: MIT
;
(ns test.fun)

(test "fn"
      (let [f1 (fn [x y] (+ x y x))
            f2 #(+ %1 %2 %1)]
        (= (f1 1 2) (f2 1 2))))

(defn curry' [args body]
  (let [fa (first args)
        r  (next args)]
    (if r
      (list 'fn (vector fa) (curry' r body))
      (cons 'fn (cons (vector fa) body)))))

(defmacro defn-curried [name args & body]
  (list 'def name (curry' args body)))

; (defn-curried chicken [a b c] (+ a b c))
; (println (((chicken 1) 2) 3))

(defn-curried K [q i] q)
(defn-curried S [x y z] ((x z) (y z)))

(def I ((S K) K))

(test "SKI" (and (= (I 5) 5)
                 (= (I 6) 6)))
