;
; Copyright (c) 2021 Marcin Gasperowicz <xnooga@gmail.com>
; SPDX-License-Identifier: MIT
;
(ns test.recur)


(test "loop/recur"
      (= 220
         (loop [val 200
                cnt 20]
           (if (pos? cnt)
             (recur (inc val) (dec cnt))
             val))))

(test "loop/let/recur"
      (= 220
         (loop [val 200
                cnt 20]
           (let [meh 1
                 muh 2]
             (if (pos? cnt)
               (recur (inc val) (dec cnt))
               val)))))


(test "fn/recur"
      (let [f (fn [x]
                (if (pos? x)
                  (recur (dec x))
                  x))]
        (= (f 10) 0)))

(test "fn/let/recur"
      (let [f (fn [x]
                (let [meh 1
                      muh 2]
                  (if (pos? x)
                    (recur (dec x))
                    x)))]
        (= (f 10) 0)))

(test "fn/loop/recur"
      (let [f (fn [n]
                (* 2
                   (loop [x 0]
                     (if (< x n)
                       (recur (inc x))
                       x))))]
        (= (f 10) 20)))

(test "fn/loop/let/recur"
      (let [f (fn [n]
                (* 2
                   (loop [x 0]
                     (let [meh 1
                           muh 2]
                       (if (< x n)
                         (recur (inc x))
                         x)))))]
        (= (f 10) 20)))

(test "dotimes"
      (do 
        (dotimes [kek 100] (println kek))
        true))