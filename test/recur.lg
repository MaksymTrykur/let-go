;
; Copyright (c) 2021 Marcin Gasperowicz <xnooga@gmail.com>
;
; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
; documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
; persons to whom the Software is furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
; Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
; WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
; COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
; OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
;
(ns test.recur)


(test "loop/recur"
      (= 220
         (loop [val 200 cnt 20]
           (if (pos? cnt)
               (recur (inc val) (dec cnt))
               val))))


(test "fn/recur"
      (let [f (fn [x]
                (if (pos? x)
                  (recur (dec x))
                  x))]
        (= (f 10) 0)))

(test "fn/loop/recur"
      (let [f (fn [n]
                (* 2
                  (loop [x 0]
                    (if (< x n)
                      (recur (inc x))
                      x))))]
        (= (f 10) 20)))