;
; Copyright (c) 2021 Marcin Gasperowicz <xnooga@gmail.com>
; SPDX-License-Identifier: MIT
;

(ns test.primes)

(defn is-prime? [n]
  (if (< n 2)
    false
    (loop [i 2]
      (cond (= i n)           true
            (zero? (mod n i)) false
            :else             (recur (inc i))))))

(def N 3000)

(test "primes"
      (= 430
         (count (loop [i 0 primes (list)]
                  (if (< i N)
                    (if (is-prime? i)
                      (recur (inc i) (cons i primes))
                      (recur (inc i) primes))
                    primes)))))
