;
; Copyright (c) 2021 Marcin Gasperowicz <xnooga@gmail.com>
;
; Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
; documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
; persons to whom the Software is furnished to do so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
; Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
; WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
; COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
; OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
;
(ns test.values)

(test "maps"
      (let [m {:a 1 :b 2 :c 3}]
        (and (= (:a m) (m :a) (get m :a))
             (= (:b m) 2)
             (nil? (:a (dissoc m :a)))
             (= (:a m) 1)
             (= (:c (assoc m :c 'foo)) 'foo)
             (= (:c m) 3)
             (= (count m) 3)
             (= (dec (count m)) (count (dissoc m :a)))
             (= (count m) (count (dissoc m :nonexist))))))

(test "range"
      (and (= (count (range 10)) 10)
           (= (count (range 5 10 3)) 2)
           (= (first (range 8 100)) 8)))