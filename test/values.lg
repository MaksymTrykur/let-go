;
; Copyright (c) 2021 Marcin Gasperowicz <xnooga@gmail.com>
; SPDX-License-Identifier: MIT
;
(ns test.values)

(test "maps"
      (let [m {:a 1 :b 2 :c 3}]
        (and (= (:a m) (m :a) (get m :a))
             (= (:b m) 2)
             (nil? (:a (dissoc m :a)))
             (= (:a m) 1)
             (= (:c (assoc m :c 'foo)) 'foo)
             (= (:c m) 3)
             (= (:a (update m :a + 1)) 2)
             (= (:a (update m :a inc)) 2)
             (= (count m) 3)
             (= (dec (count m)) (count (dissoc m :a)))
             (= (count m) (count (dissoc m :nonexist)))
             (= (count (dissoc m :b :a)) 1)
             (= (count (assoc m :x 1 :y 2 :z 3)) 6))))

(test "range"
      (and (= (count (range 10)) 10)
           (= (count (range 5 10 3)) 2)
           (= (first (range 8 100)) 8)))